{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc7bc02d12": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subnet4b49ab22": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "ap-south-1a",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "subnet0b032c41": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "ap-south-1b",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "igw80da39e9": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "acl823ed3eb": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "rtb1631dc7f": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "elbLLFELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "subnet0b032c41"
          },
          {
            "Ref": "subnet4b49ab22"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "5",
          "Interval": "30",
          "Target": "TCP:80",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgwebdmz"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          },
          {
            "InstancePort": "80",
            "LoadBalancerPort": "443",
            "Protocol": "HTTPS",
            "InstanceProtocol": "HTTP",
            "SSLCertificateId": "arn:aws:iam::341707006720:server-certificate/sfcert",
            "PolicyNames": [
              "ELBSecurityPolicy-2016-08"
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ELB-LLF"
          }
        ]
      }
    },
    "asgLLFASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "ap-south-1b",
          "ap-south-1a"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "5",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet4b49ab22"
          },
          {
            "Ref": "subnet0b032c41"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcLLFlaunchGroup"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elbLLFELB"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "LLF-AutoScale",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcLLFlaunchGroup": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0f730260",
        "InstanceType": "t2.micro",
        "KeyName": "learning-links",
        "IamInstanceProfile": "llfs3role",
        "SecurityGroups": [
          {
            "Ref": "sgWebserver"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "instancei01933efd8cf581d95": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::341707006720:instance-profile/llfs3role",
        "ImageId": "ami-f9fb8c96",
        "InstanceType": "t2.micro",
        "KeyName": "learning-links",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NFS Server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0b032c41"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.12.64",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgNFS"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rdslearninglinks": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "0",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.r3.large",
        "Port": "3306",
        "PubliclyAccessible": "true",
        "StorageType": "aurora",
        "BackupRetentionPeriod": "0",
        "MasterUsername": "learninglinks",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "21:31-22:01",
        "PreferredMaintenanceWindow": "sat:11:08-sat:11:38",
        "DBName": "MyDatabase",
        "Engine": "aurora",
        "EngineVersion": "5.6.10a",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefault"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgRDSsecurity"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "dbsubnetdefault": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "default",
        "SubnetIds": [
          {
            "Ref": "subnet4b49ab22"
          },
          {
            "Ref": "subnet0b032c41"
          }
        ]
      }
    },
    "sgNFS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "NFS server",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "sgRDSsecurity": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS-security",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RDS-security"
          }
        ]
      }
    },
    "sgwebdmz": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "web-dmz",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "web-dmz"
          }
        ]
      }
    },
    "sgWebserver": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Webserver",
        "VpcId": {
          "Ref": "vpc7bc02d12"
        }
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "scalingDecreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": -1,
            "MetricIntervalUpperBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgLLFASG"
        }
      }
    },
    "scalingIncreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": 1,
            "MetricIntervalLowerBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgLLFASG"
        }
      }
    },
    "alarmLLFASGAlaramDecrease": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "50.0",
        "AlarmActions": [
          {
            "Ref": "scalingDecreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "LLF-ASG"
          }
        ]
      }
    },
    "alarmLLFASGAlramIncrease": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "60",
        "Statistic": "Average",
        "Threshold": "70.0",
        "AlarmActions": [
          {
            "Ref": "scalingIncreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "LLF-ASG"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl823ed3eb"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl823ed3eb"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl823ed3eb"
        },
        "SubnetId": {
          "Ref": "subnet0b032c41"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl823ed3eb"
        },
        "SubnetId": {
          "Ref": "subnet4b49ab22"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7bc02d12"
        },
        "InternetGatewayId": {
          "Ref": "igw80da39e9"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb1631dc7f"
        },
        "GatewayId": {
          "Ref": "igw80da39e9"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7bc02d12"
        },
        "DhcpOptionsId": "dopt-e527ca8c"
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNFS"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRDSsecurity"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgwebdmz"
        },
        "SourceSecurityGroupOwnerId": "341707006720"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRDSsecurity"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgWebserver"
        },
        "SourceSecurityGroupOwnerId": "341707006720"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRDSsecurity"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebdmz"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebdmz"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebdmz"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgwebdmz"
        },
        "SourceSecurityGroupOwnerId": "341707006720"
      }
    },
    "ingress9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgwebdmz"
        },
        "SourceSecurityGroupOwnerId": "341707006720"
      }
    },
    "ingress10": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "-1",
        "CidrIp": "182.71.31.82/32"
      }
    },
    "ingress11": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "SourceSecurityGroupId": {
          "Ref": "sgwebdmz"
        },
        "SourceSecurityGroupOwnerId": "341707006720"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNFS"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRDSsecurity"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebdmz"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserver"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "This template automate the Learning Links Foundation infrastructure.",
  "Outputs": {
    "instancei01933efd8cf581d95PublicDNSName": {
      "Value": {
        "Fn::GetAtt": [
          "instancei01933efd8cf581d95",
          "PublicDnsName"
        ]
      }
    }
  }
}